---
- name: "Clone CT Template by Name"
  hosts: localhost
  connection: local
  gather_facts: no

  vars_files:
    - secrets.yml

  vars:
    proxmox_host: "192.168.210.135"
    proxmox_user: "root@pam"
    proxmox_token_id: "demov1"
    proxmox_api_secret: "{{ proxmox_api_secret }}"
    proxmox_node: "pve"
    template_name: "CTedgeTemplate"
    new_ct_name: "cloned-container"
    storage: "local-lvm"

  tasks:
    - name: "Get list of all containers to find template ID"
      community.general.proxmox:
        api_host: "{{ proxmox_host }}"
        api_user: "{{ proxmox_user }}"
        api_token_id: "{{ proxmox_token_id }}"
        api_token_secret: "{{ proxmox_api_secret }}"
        node: "{{ proxmox_node }}"
        vmid: "all"
        state: list
      register: containers_list

    - name: "Find template ID by name"
      set_fact:
        template_id: "{{ item.vmid }}"
      loop: "{{ containers_list.results }}"
      when: 
        - item.name is defined
        - item.name == template_name
        - item.template == 1
      fail_msg: "Template dengan nama '{{ template_name }}' tidak ditemukan"

    - name: "Clone the container template"
      community.general.proxmox:
        api_host: "{{ proxmox_host }}"
        api_user: "{{ proxmox_user }}"
        api_token_id: "{{ proxmox_token_id }}"
        api_token_secret: "{{ proxmox_api_secret }}"
        node: "{{ proxmox_node }}"
        clone: "{{ template_id }}"
        name: "{{ new_ct_name }}"
        storage: "{{ storage }}"
        full: true
        timeout: 300
      register: clone_result

    - name: "Get ID of the newly created container"
      set_fact:
        new_ct_id: "{{ clone_result.vmid }}"
      when: clone_result.changed

    - name: "Start the cloned container"
      community.general.proxmox:
        api_host: "{{ proxmox_host }}"
        api_user: "{{ proxmox_user }}"
        api_token_id: "{{ proxmox_token_id }}"
        api_token_secret: "{{ proxmox_api_secret }}"
        node: "{{ proxmox_node }}"
        vmid: "{{ new_ct_id }}"
        state: started
      when: clone_result.changed

    - name: "Wait for container to be fully started"
      pause:
        seconds: 10
      when: clone_result.changed

    - name: "Display results"
      debug:
        msg: "CT {{ new_ct_id }} ({{ new_ct_name }}) berhasil di-clone dari template {{ template_name }} (ID: {{ template_id }})"
      when: clone_result.changed

    - name: "Display error if cloning failed"
      debug:
        msg: "Gagal melakukan cloning: {{ clone_result.msg }}"
      when: clone_result.failed